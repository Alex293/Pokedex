//
//  PokemonDetailsInteractor.swift
//  Pokedex
//
//  Created Alexis Schultz on 03/08/2017.
//  Copyright © 2017 Alexis Schultz. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PokemonDetailsInteractor: PokemonDetailsInteractorInputProtocol
{
    weak var presenter: PokemonDetailsInteractorOutputProtocol?

    func loadPokemonDetails(from url: String)
    {
        pokeAPI.resource(for: url).addObserver(owner: self)
        {
            [weak self] (resource, event) in
            switch event
            {
            case .newData(_) :
                let result : PokemonDetails = resource.typedContent(ifNone: (id : 0, name : "Default name", imageUrl : "None", stats : [],  types: []))
                self?.presenter?.didLoad(pokemon: Pokemon(details : result))
            case .error :
                guard let error = resource.latestError else { return }
                print(error)
            default : break
            }
        }.load()
    }

    func loadPokemonImage(from url : String, successCallBack : @escaping (_ image : UIImage) -> Void)
    {
        pokeAPI.resource(for: url).request(.get)
        .onSuccess(
        {
            (entity) in
            guard let image : UIImage = entity.typedContent(ifNone: nil) else
            {
                return
            }
            successCallBack(image)
        })
        .onFailure
        {
            (error) in
            print("Failed to load pokemon image")
            //self?.presenter?.didFailedToLoadData(error: error, isInitialLoad: false)
        }
    }
}

